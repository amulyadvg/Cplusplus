#include<iostream>
#include<math.h>
using namespace std;

class Node{
  public:
    int data;
    Node* next;
};

Node* newNode(int data) {
  Node* new_node = new Node();
  new_node->data = data;
  new_node->next = NULL;
  return new_node;
}

void addBeg(Node** head_ref, int new_data) {
  Node* new_node = NULL;
  new_node = new Node();
  new_node->data = new_data;
  new_node->next = *head_ref;
  *head_ref = new_node;
}

Node* addTwoLists(Node* first, Node* second) {
  Node* res = NULL;
  Node *temp, *prev = NULL;
  int sum, carry = 0;
  
  while ((first != NULL) || (second != NULL)) {
    sum = carry + (first ? first->data : 0) + (second ? second->data : 0)
    carry = (sum > 10) ? 1 : 0;
    sum = sum % 10;
    temp = newNode(sum);
    
    if (res == NULL)
      res = temp;
     else 
      prev->next = temp;
     prev = temp;
     
     if (first)
      first = first->next;
     if (second)
      second = second->next;
  }
  
  if (carry > 0)
    temp->next = newNode(carry);
    
return res;
}

void printList(Node* n){
  while (n != 0) {
    cout << n->data << " ";
    n = n->next;
  }
  cout << endl;
}

int main() {
  Node* first = NULL;
  Node* second = NULL;
  Node* res = NULL;

  addBeg(&first, 1);
  addBeg(&first, 2);
  addBeg(&first, 3);
  addBeg(&first, 4);
  cout << "First list: " << endl;
  printList(first);
  
  addBeg(&second, 1);
  addBeg(&second, 1);
  addBeg(&second, 1);
  addBeg(&second, 1);
  cout << "Second list: " << endl;
  printList(second);
  
  res = addTwoLists(first, second);
  cout << "Final result: " << endl;
  printList(res);
  
 return 0;
}
